<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noticeMapper">
	
	<resultMap id="noticeResultSet" type="Notice">
		<id property="nid" column="NID"/>
		<result property="ntitle" column="NTITLE"/>
		<result property="nwriter" column="NWRITER"/>
		<result property="ncontent" column="NCONTENT"/>
		<result property="n_create_date" column="N_CREATE_DATE"/>
		<result property="n_modify_date" column="N_MODIFY_DATE"/>
		<result property="file_path" column="FILE_PATH"/>
	</resultMap>
	
	<resultMap id="noticeTop3Result" type="Notice">
		<id property="nid" column="NID"/>
		<result property="ntitle" column="NTITLE"/>
		<result property="n_create_date" column="N_CREATE_DATE"/>
	</resultMap>
	
	<select id="selectAll" resultMap="noticeResultSet">
		select * from notice
		order by nid desc
	</select>
	
	<select id="selectNotice" parameterType="_int" resultMap="noticeResultSet">
		select * from notice
		where nid = #{nid}
	</select>
	
	<select id="selectNewTop3" resultMap="noticeTop3Result">
		<![CDATA[	
		SELECT * 
		FROM (SELECT ROWNUM RNUM, NID, NTITLE, N_CREATE_DATE
		            FROM (SELECT * FROM NOTICE
		                        ORDER BY NID DESC))
		WHERE RNUM >= 1 AND RNUM <= 3
		]]>		<!-- sql구문에 비교연산자 있는 구문은 <![CDATA[-]]> 사용해야함 -->
	</select>
	
	<select id="searchTitle" parameterType="string" resultMap="noticeResultSet">
		select * from notice
		where ntitle like '%' || #{ keyword } || '%'
	</select>
	<select id="searchWriter" parameterType="string" resultMap="noticeResultSet">
		select * from notice
		where nwriter like '%' || #{ keyword } || '%'
	</select>
	<select id="searchDate" parameterType="com.ict.spring.notice.model.vo.SearchDate"
	resultMap="noticeResultSet">	<!-- mybatis가 제공하는 select object는 begin과 end를 같이 가져올수 없기 때문에 하나의 객체에 넣어줘야 한다. (전달할 인자는 무조건 object로만가능) -->
		select * from notice
		where n_create_date between #{ begin } and #{ end }
	</select>	
	
	<insert id="insertNotice" parameterType="Notice">
		insert into notice
		<if test="file_path != null">
		values (seq_nid.nextval, #{ntitle}, #{nwriter}, #{ncontent}, default, default, #{file_path})
		</if>
		<if test="file_path == null">
		(nid, ntitle, nwriter, ncontent, n_create_date, n_modify_date)
		values (seq_nid.nextval, #{ntitle}, #{nwriter}, #{ncontent}, default, default )
		</if>
	</insert>
	
	<update id="updateNotice" parameterType="Notice">
		update notice
		set ntitle = #{ ntitle },
			ncontent = #{ ncontent }
			<if test="file_path != null">
			, file_path = #{ file_path }
			</if>
			<if test="file_path == null">
			, file_path = null
			</if>
		where nid = #{ nid }
	</update>
	
	<delete id="deleteNotice" parameterType="_int">
		delete from notice
		where nid = #{ nid} 
	</delete>
		
</mapper>